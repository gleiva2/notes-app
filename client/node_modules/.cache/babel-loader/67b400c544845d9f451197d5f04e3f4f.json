{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  name: \"NotesList\",\n  data: function data() {\n    return {\n      title: null,\n      selectedItem: 1,\n      note: null,\n      message: null,\n      status: \"\"\n    };\n  },\n  methods: {\n    getNote: function getNote(id) {\n      var _this = this;\n\n      axios.get(\"http://localhost:3000/notes/\".concat(id)).then(function (response) {\n        return _this.note = response.data;\n      });\n    },\n    deleteNote: function deleteNote(id) {\n      var _this2 = this;\n\n      axios.delete(\"http://localhost:3000/notes/\".concat(id)).then(function (response) {\n        return _this2.message = response.data;\n      });\n      this.$router.push(\"/\");\n    },\n    updateNote: function updateNote(id) {\n      var _this3 = this;\n\n      axios.patch(\"http://localhost:3000/notes/\".concat(id), {\n        title: this.note.title,\n        body: this.note.body\n      }).then(function (response) {\n        return _this3.note = response.data;\n      }).catch(function (error) {\n        console.log(error);\n        _this3.status = \"Title cannot be empty!\";\n      });\n    },\n    checkTitle: function checkTitle() {\n      if (this.note.title == null) {\n        this.status = \"Title cannot be empty!\";\n      } else {\n        this.status = \"Note saved!\";\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.getNote(this.$route.params.id);\n    this.checkTitle();\n  },\n  watch: function watch() {\n    this.checkTitle();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AAEA;AACAA,mBADA;AAGAC;AACA;AACAC,iBADA;AAEAC,qBAFA;AAGAC,gBAHA;AAIAC,mBAJA;AAKAC;AALA;AAOA,GAXA;AAaAC;AACAC;AAAA;;AACAC,YACAC,GADA,uCACAC,EADA,GAEAC,IAFA,CAEA;AAAA;AAAA,OAFA;AAGA,KALA;AAMAC;AAAA;;AACAJ,YACAK,MADA,uCACAH,EADA,GAEAC,IAFA,CAEA;AAAA;AAAA,OAFA;AAGA;AACA,KAXA;AAYAG;AAAA;;AACAN,YACAO,KADA,uCACAL,EADA,GACA;AACAT,8BADA;AAEAe;AAFA,OADA,EAKAL,IALA,CAKA;AAAA;AAAA,OALA,EAMAM,KANA,CAMA;AACAC;AACA;AACA,OATA;AAUA,KAvBA;AAwBAC;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AA9BA,GAbA;AA8CAC;AACA;AACA;AACA,GAjDA;AAmDAC;AACA;AACA;AArDA","names":["name","data","title","selectedItem","note","message","status","methods","getNote","axios","get","id","then","deleteNote","delete","updateNote","patch","body","catch","console","checkTitle","mounted","watch"],"sourceRoot":"src/components","sources":["NoteView.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-text-field\n      v-model=\"note.title\"\n      label=\"Title\"\n      outlined\n      filled\n      clearable\n      color=\"teal\"\n    ></v-text-field>\n    <v-textarea\n      v-model=\"note.body\"\n      filled\n      clearable\n      outlined\n      auto-grow\n      color=\"teal\"\n    ></v-textarea>\n    <v-btn\n      v-on:click=\"\n        updateNote($route.params.id);\n        $root.$emit('event', note);\n      \"\n      color=\"teal lighten-1\"\n      dark\n    >\n      Save\n    </v-btn>\n    <v-btn\n      v-on:click=\"\n        deleteNote($route.params.id);\n        $root.$emit('event', note);\n      \"\n      dark\n      color=\"blue-grey\"\n      >Delete</v-btn\n    >\n    <p>{{ status }}</p>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"NotesList\",\n\n  data: function () {\n    return {\n      title: null,\n      selectedItem: 1,\n      note: null,\n      message: null,\n      status: \"\",\n    };\n  },\n\n  methods: {\n    getNote: function (id) {\n      axios\n        .get(`http://localhost:3000/notes/${id}`)\n        .then((response) => (this.note = response.data));\n    },\n    deleteNote: function (id) {\n      axios\n        .delete(`http://localhost:3000/notes/${id}`)\n        .then((response) => (this.message = response.data));\n      this.$router.push(\"/\");\n    },\n    updateNote: function (id) {\n      axios\n        .patch(`http://localhost:3000/notes/${id}`, {\n          title: this.note.title,\n          body: this.note.body,\n        })\n        .then((response) => (this.note = response.data))\n        .catch((error) => {\n          console.log(error);\n          this.status = \"Title cannot be empty!\";\n        });\n    },\n    checkTitle: function () {\n      if (this.note.title == null) {\n        this.status = \"Title cannot be empty!\";\n      } else {\n        this.status = \"Note saved!\";\n      }\n    },\n  },\n\n  mounted: function () {\n    this.getNote(this.$route.params.id);\n    this.checkTitle()\n  },\n\n  watch: function () {\n    this.checkTitle();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}